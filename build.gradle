apply plugin: 'war'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url 'http://repository.primefaces.org/'
    }
}

dependencies {
    compile 'org.flywaydb:flyway-core:4.0.3'
    providedCompile 'org.projectlombok:lombok:1.16.10'
    providedCompile 'fish.payara.extras:payara-micro:4.1.1.163'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
}

war.baseName = 'vote'

task deploy(type: Exec, dependsOn: war) {
    def payaraHome = System.env.PAYARA_HOME
    def asadmin = /$payaraHome\bin\asadmin.bat/

    commandLine('cmd', '/C', asadmin, 'deploy', '--force=true', war.archivePath)
}

/*
task uberJar(type: Exec, dependsOn: war) {
    def payaraJarPath = getPayaraJar()
    def warFile = war.archivePath
    def uberJarPath = warFile.path.replaceAll(/\.war$/, '.jar')

    commandLine('java', '-jar', payaraJarPath, '--deploy', warFile, '--outputUberJar', uberJarPath)
}

task run(type: Exec, dependsOn: war) {
    def payaraJarPath = getPayaraJar()
    def warFile = war.archivePath

    commandLine('java', '-jar', 
        '-Xrunjdwp:transport=dt_socket,server=y,address=18080,suspend=n',
        payaraJarPath, '--deploy', warFile)
}

def getPayaraJar() {
    return configurations
              .providedCompile
              .find {it.name =~ /payara-micro.*\.jar/}
              .absolutePath
}
*/